name: ci

on:
  push:
    branches:
      - main
      - master
    paths:
      - '!infra/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - '!infra/**'

jobs:
  infra:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v0.1.0
        with:
          terragrunt_version: 0.35.12
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11 
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true


      - run: cd infra/live/prod && terragrunt apply-all --terragrunt-non-interactive

      - id: plan
        run: terraform plan -no-color

      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}

  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true




      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

        #- name: Run tests 🧪
        #  run: yarn test

      - name: Generate & bundle
        run: yarn run generate
        env:
          DEEPL_KEY: ${{ secrets.DEEPL_KEY }}

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: pias
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1' # optional: defaults to us-east-1
          SOURCE_DIR: 'dist'
