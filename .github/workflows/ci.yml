name: ci

on:
  workflow_dispatch:
    inputs:
      foo:
        description: ''
        required: false
        default: 'bar'

  push:
    branches:
      - main
      - develop
    paths-ignore:
      - 'infra/**'

env:
  ENV: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
  AWS_REGION: 'eu-west-3' # paris

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

        #- name: Run tests 🧪
        #  run: yarn test

      - name: Generate & bundle🤞
        run: yarn build && yarn generate
        env:
          DEEPL_KEY: ${{ secrets.DEEPL_KEY }}
          ORCID_ID: ${{secrets.ORCID_SANDBOX_ID}}
          ORCID_SANDBOX_SECRET_KEY_ID: ${{secrets.ORCID_SANDBOX_SECRET_KEY_ID}}

      - name: Retro push generated content 🧙‍♂️
        run: git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[skip ci] auto-generated content"
          git push

      - name: Prepare to merge the generated content
        uses: actions/checkout@v2.4.0
        with:
          clean: 'false'

      - name: Retro push generated content 🧙‍♂️
        run: git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[skip ci] auto-generated content"
          git push

      - uses: 'aws-actions/configure-aws-credentials@v1'
        with:
          aws-access-key-id: ${{ env.ENV == 'prod' && secrets.AWS_ACCESS_KEY_ID ||  secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ env.ENV == 'prod' && secrets.AWS_SECRET_ACCESS_KEY || secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: 'marvinpinto/action-inject-ssm-secrets@latest'
        with:
          ssm_parameter: '/ppias/cloudfront/id'
          env_variable_name: 'ssm_cloudfront_id'

      - uses: 'marvinpinto/action-inject-ssm-secrets@latest'
        with:
          ssm_parameter: '/ppias/s3/name'
          env_variable_name: 'ssm_s3_name'

      - name: Deploy to S3 🚀🚀🚀
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.SSM_S3_NAME }}
          SOURCE_DIR: 'dist'

      - name: Invalidate Cloudfront Cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.SSM_CLOUDFRONT_ID }}
          PATHS: '/*'
